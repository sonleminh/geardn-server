generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tags {
  value     String   @unique
  label     String
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
}

model TierVariant {
  id        Int      @id @default(autoincrement())
  value     String
  options   String[]
  images    String[]
  // Product   Product? @relation(fields: [productId], references: [id])
  // productId Int?
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
}

model Details {
  guarantee Int
  material  String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int     @unique
}

model Product {
  id              Int           @id @default(autoincrement())
  name            String        @unique
  categoryId      Int
  category        Category      @relation(fields: [categoryId], references: [id])
  tags            Tags[]
  images          String[]
  tier_variations TierVariant[]
  sku_name        String        @unique
  brand           String        @default("Kh√¥ng")
  details         Details?
  description     String?
  slug            String        @unique
  is_deleted      Boolean       @default(false)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  // detailsId       Int?
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  icon      String
  slug      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model User {
  id        Int      @id @default(autoincrement())
  password  String
  email     String   @unique
  name      String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
